# FILE: .github/workflows/docker-build.yml
name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Extract version from Git tag or commit
      id: version
      run: |
        if [ "${{ github.event.release.tag_name }}" != "" ]; then
          echo "VERSION=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
        else
          echo "VERSION=$(date -u +"%Y%m%d%H%M%S")" >> $GITHUB_ENV
        fi
    - name: Set up Node.js
      run: "echo version is ${{ env.VERSION }}"

    - name: Replace image version in deployment.yaml
      run: sed -i "s|\${VERSION}|${{ env.VERSION }}|" ./demo-react/k8s/deployment.yaml

    - name: Replace image version in deployment.yaml
      run: sed -i "s|smabdullah/demo-react:latest|smabdullah/demo-react:${{ env.VERSION }}|" ./demo-react/k8s/deployment.yaml
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./demo-react
        file: ./demo-react/Dockerfile
        push: true
        platforms: linux/amd64,linux/arm64
        build-args: |
          VERSION=${{ env.VERSION }}
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/demo-react:${{ env.VERSION }}
          ${{ secrets.DOCKER_USERNAME }}/demo-react:latest